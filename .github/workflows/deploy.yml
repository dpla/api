name: Deploy to Amazon ECR
on:
  workflow_dispatch:

jobs:

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      
    - name: Set up JDK 1.8
      uses: actions/setup-java@v4
      with:
        java-version: 8
        distribution: temurin
        cache: sbt

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        image: tonistiigi/binfmt:latest
        platforms: arm64,arm

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build JAR
      run: sbt assembly

    - name: Get branch name (merge)
      if: github.event_name != 'pull_request'
      shell: bash
      run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

    - name: Get branch name (pull request)
      if: github.event_name == 'pull_request'
      shell: bash
      run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

    - name: Debug
      run: echo ${{ env.BRANCH_NAME }}

    - name: Create Sentry release
      uses: getsentry/action-release@v1
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      with:
        environment: production

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: api
        IMAGE_TAG: ${{ github.sha }}
        BRANCH_NAME: ${{ env.BRANCH_NAME }}
      run: |
        docker buildx build \
        -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
        -t $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_NAME \
        -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
        --platform linux/amd64,linux/arm64 . \
        --push
